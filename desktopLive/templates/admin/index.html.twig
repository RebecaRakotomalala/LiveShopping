
{% extends 'admin/baseAdmin.html.twig' %}
{% block stylesheets %}
    {{ parent() }}
    <link rel="stylesheet" href="{{ asset('css/dashboard.css') }}">
{% endblock %}

{% block content %}
    <div class="dashboard-container">
        <form class="date-form" action="" method="post">
            <div class="form-group">
                <input type="date" name="dateD" id="dateD" required>
            </div>
            <div class="form-group">
                <input type="date" name="dateF" id="dateF" required>
            </div>
            <div class="form-group">
                <select name="category" id="category" required>
                    {% for category in categories %}
                        <option value="{{ category.id }}">{{ category.nameCategory }}</option>
                    {% endfor %}
                </select>
            </div>
            <button type="submit" class="submit-btn">Search</button>
        </form>

        <div class="charts-row">
            <div class="chart-container">
                <canvas id="salesChart"></canvas>
            </div>

            <div class="chart-container">
                <canvas id="trendsChart"></canvas>
            </div>

            <div class="chart-container">
                <canvas id="cheeseChart"></canvas>
            </div>
        </div>

        {% if bestSellers is not null %}
            <div class="best-sellers-container">
                {% for bestSeller in bestSellers %}
                <div class="best-seller-card">
                    <div class="best-seller-header">
                        <span class="best-seller-rank">{{ loop.index }}</span>
                        <span class="best-seller-badge">BEST SELLER</span>
                    </div>

                    <div class="best-seller-content">
                        <img
                            src="{{ bestSeller.image_id starts with 'http' ? bestSeller.image_id : asset('images/' ~ bestSeller.image_id) }}"
                            alt="{{ bestSeller.name }}"
                            class="best-seller-image"
                            loading="lazy"
                            width="80"
                            height="80"
                            onerror="this.src='{{ asset('images/shoe1.jpg') }}'"
                        >

                        <div class="best-seller-info">
                            <div class="best-seller-name" title="{{ bestSeller.name }}">{{ bestSeller.name }}</div>

                            <div class="best-seller-detail">
                                <span class="best-seller-label">Ventes</span>
                                <span class="best-seller-value">{{ bestSeller.sales }}</span>
                            </div>

                            <div class="best-seller-detail">
                                <span class="best-seller-label">Prix</span>
                                <span class="best-seller-value price-value">{{ bestSeller.average_price|number_format(2, '.', ' ') }} €</span>
                            </div>

                            <div class="best-seller-detail">
                                <span class="best-seller-label">Catégorie</span>
                                <span class="best-seller-value">{{ bestSeller.category }}</span>
                            </div>

                            <div class="best-seller-detail">
                                <span class="best-seller-label">Note</span>
                                <span class="best-seller-value">4.8 ★</span>
                            </div>
                        </div>
                    </div>
                </div>
                {% endfor %}
            </div>
        {% endif %}
    </div>

{% endblock %}

{% block javascripts %}
    {{ parent() }}
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
        const statsMensuelles = {{ stats|json_encode|raw }};
        const vendeurNom = "{{ defaultSeller.username ?? 'Vendeur inconnu' }}";
        console.log(vendeurNom);

        const ventesParCategorieParMois = {{ ventesParCategorieParMois|json_encode|raw }};

        const ventesParArticle = {{ ventesParArticle|json_encode|raw }};
        const categoryNom = "{{ category.nameCategory }}";

        const meilleurVente = {{ bestSellers|json_encode|raw }};
        console.log(meilleurVente);

        document.addEventListener('DOMContentLoaded', function() {
            // Fonction pour les options dynamiques
            const getChartOptions = (title, isDoughnut = false) => {
                const isDark = document.body.classList.contains('dark-theme');
                const options = {
                    responsive: true,
                    scales: {},
                    plugins: {
                        title: {
                            display: true,
                            text: title,
                            color: isDark ? '#F8F9FA' : '#212529',
                            font: { size: 16 }
                        },
                        legend: {
                            labels: {
                                color: isDark ? '#F8F9FA' : '#212529'
                            }
                        }
                    }
                };

                if (!isDoughnut) {
                    options.scales = {
                        y: {
                            beginAtZero: true,
                            grid: { color: isDark ? 'rgba(255, 255, 255, 0.1)' : 'rgba(0, 0, 0, 0.1)' },
                            ticks: { color: isDark ? '#F8F9FA' : '#212529' }
                        },
                        x: {
                            grid: { display: false },
                            ticks: { color: isDark ? '#F8F9FA' : '#212529' }
                        }
                    };
                }

                return options;
            };

            // Graphique principal avec évolution mensuelle du CA
            const salesChart = new Chart(document.getElementById('salesChart'), {
                type: 'bar',
                data: {
                    labels: statsMensuelles.labels.length > 0 ? statsMensuelles.labels : ['Aucune donnée'],
                    datasets: [{
                        label: 'Chiffre d\'affaires mensuel (€)',
                        data: statsMensuelles.chiffre_affaires.length > 0 ? statsMensuelles.chiffre_affaires : [0],
                        backgroundColor: '#567AF4',
                        borderColor: '#3A5BCD',
                        borderWidth: 1
                    }]
                },
                options: {
                    ...getChartOptions('Évolution Mensuelle - ' + vendeurNom),

                    plugins: {
                        ...getChartOptions('Évolution Mensuelle - ' + vendeurNom).plugins,
                        tooltip: {
                            callbacks: {
                                label: function(context) {
                                    return 'CA: ' + context.raw.toLocaleString() + '€';
                                }
                            }
                        }
                    }
                }
            });

            const colors = [
                '#567AF4', '#4BC0C0', '#FF9966', '#9966FF', '#FF6384', '#36A2EB'
            ];

            const trendsChart = new Chart(document.getElementById('trendsChart'), {
                type: 'line',
                data: {
                    labels: ventesParCategorieParMois.labels.length > 0 ? ventesParCategorieParMois.labels : ['Aucune donnée'],
                    datasets: Object.entries(ventesParCategorieParMois.datasets || {}).map(([cat, data], index) => ({
                        label: cat,
                        data: data,
                        borderColor: colors[index % colors.length],
                        backgroundColor: colors[index % colors.length] + '33',
                        borderWidth: 2,
                        tension: 0.3
                    }))
                },
                options: getChartOptions('Évolution des Ventes par Catégorie - ' + vendeurNom)
            });

            const cheeseCtx = document.getElementById('cheeseChart').getContext('2d');
            // Préparer les données
            const cheeseLabels = ventesParArticle && ventesParArticle.datasets
                ? Object.keys(ventesParArticle.datasets)
                : [];

            const cheeseData = cheeseLabels.map(label => {
                const dataArray = ventesParArticle.datasets[label];
                console.log('→', label, dataArray);
                return Array.isArray(dataArray)
                    ? dataArray.reduce((a, b) => a + b, 0)
                    : 0;
            });

            // Couleurs dynamiques (ajustables si plus de 6 articles)
            const cheeseColors = [
                '#567AF4', '#4BC0C0', '#FF9966', '#9966FF', '#FF6384', '#36A2EB',
                '#FFC107', '#00BCD4', '#8BC34A', '#FF5722'
            ];

            const cheeseChart = new Chart(cheeseCtx, {
                type: 'doughnut',
                data: {
                    labels: cheeseLabels.length ? cheeseLabels : ['Aucune donnée'],
                    datasets: [{
                        data: cheeseData.length ? cheeseData : [1],
                        backgroundColor: cheeseColors.slice(0, cheeseLabels.length),
                        borderColor: document.body.classList.contains('dark-theme') ? '#2C3034' : '#FFFFFF',
                        borderWidth: 2
                    }]
                },
                options: getChartOptions('Répartition des articles - ' + categoryNom, true)
            });

            // Rafraîchissement lors du changement de thème
            const updateCharts = () => {
                salesChart.options = getChartOptions('Statistiques des Ventes Mensuelles');
                trendsChart.options = getChartOptions('Évolution des Ventes par Catégorie');
                cheeseChart.options = getChartOptions('Détail par Article', true);

                salesChart.update();
                trendsChart.update();
                cheeseChart.update();
            };

            document.getElementById('themeToggle').addEventListener('click', function() {
                setTimeout(updateCharts, 100);
            });
        });
    </script>
{% endblock %}
